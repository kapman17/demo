plugins {
	id 'java'
	id 'maven-publish'
	id 'org.springframework.boot' version '2.6.7'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
	id 'com.diffplug.gradle.spotless' version '4.5.1'
	id 'jacoco'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

publishing {
	repositories {
		maven {
			name = "GitHubPackages"
			url = uri("https://maven.pkg.github.com/kapman17/demo")
			credentials {
				username = project.findProperty("gpr.user") ?: System.getenv("GITHUB_ACTOR")
				password = project.findProperty("gpr.key") ?: System.getenv("GITHUB_TOKEN")
			}
		}
	}
	publications {
		gpr(MavenPublication) {
			// bootJar is the default build task configured by Spring Boot
			artifact bootJar
		}
	}
}

spotless {
	java {
		removeUnusedImports()
		eclipse().configFile "${rootProject.projectDir}/EclipseFormat.xml"
		targetExclude("build/generated/sources/**/*.java")

		trimTrailingWhitespace()
	}

	format 'gradle', {
		target '**/*.gradle'
		trimTrailingWhitespace()
		indentWithTabs()
	}

	format 'misc', {
		// define the files to apply `misc` to
		target '*.gradle', '*.md', '.gitignore'

		trimTrailingWhitespace()
		indentWithTabs()
		endWithNewline()
	}
}

/**
* Set up code coverage reports using jacoco
* @link https://docs.gradle.org/current/userguide/jacoco_plugin.html
* @link https://stackoverflow.com/questions/19025138/gradle-how-to-generate-coverage-report-for-integration-test-using-jacoco
*/
jacocoTestReport {
	// tests are required to run before generating the report
	dependsOn test

	// we need to make sure all exec files from all test configurations are included
	getExecutionData().setFrom(fileTree(buildDir).include("/jacoco/*.exec"))

	reports {
		xml.enabled true
		html.enabled true
		csv.enabled true
	}
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.7.0'
	testImplementation 'org.mockito:mockito-core:4.11.0'
	testImplementation 'org.springframework.boot:spring-boot-test:2.6.7'
	testImplementation 'org.springframework:spring-test:5.3.27'
	// https://mvnrepository.com/artifact/net.bytebuddy/byte-buddy-dep
	implementation group: 'net.bytebuddy', name: 'byte-buddy-dep', version: '1.14.4'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	implementation 'com.h2database:h2'
	testImplementation 'com.h2database:h2'
}

tasks.named('test') {
	useJUnitPlatform()
}
